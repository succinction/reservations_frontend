{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.a2b4cf593d85cee58131.hot-update.js","sources":["webpack:///./components/Accordion.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { TweenLite, Power3 } from 'gsap'\r\n\r\nclass Accordion extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.myID = `accordion_${this.props.ID}`\r\n        this.isOpen = true\r\n        this.groupID = !!this.props.groupID ? this.props.groupID : \"noID_\" + this.props.ID\r\n        // this.clickTarget = document.getElementById(this.props.actionID)\r\n        this.groupAccordionFn = !!this.props.groupFn ? this.props.groupFn : (arg) => { console.log(\" !! NOT groupFn: \", arg) }\r\n        this.callbackFn = this.props.callbackFn ? this.props.callbackFn : () => { }\r\n        this.timeAdjustment = !!this.props.addSeconds ? Number(this.props.addSeconds) : 0\r\n        this.offsetTiming = !!this.props.offsetSeconds ? Number(this.props.offsetSeconds) : 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.clickTarget = document.getElementById(this.props.actionID)\r\n        if (!!this.clickTarget) {\r\n            this.clickTarget.style.cursor = \"pointer\"\r\n            this.clickTarget.addEventListener(\"click\", (event) => {\r\n                console.log(\"click\")\r\n                this._toggleSwitch()\r\n            })\r\n            this.clickTarget.addEventListener(\"keypress\", (event) => {\r\n                if (event.key === \"Enter\") {\r\n                    this._toggleSwitch()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        if (nextProps.controler.group === this.groupID) {\r\n            if (nextProps.controler.identifier !== this.myID) {\r\n                if (this.isOpen) {\r\n                    this._toggle(false)\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    initClosed = () => {\r\n        const element = document.getElementById(this.myID)\r\n        TweenLite.set(element, { height: 0 })\r\n        this.isOpen = false\r\n    }\r\n\r\n    _toggleSwitch = () => {\r\n        this.groupAccordionFn({ myID: this.myID, groupID: this.groupID })\r\n        this._toggle(!this.isOpen)\r\n    }\r\n\r\n    _toggle = (ON) => {\r\n        const easing = !!this.props.invertEasing ? Power2.easeIn : Power2.easeOut\r\n        const seconds = .4529\r\n        const element = document.getElementById(this.myID)\r\n        const complete = o => {\r\n            document.getElementById(this.myID).style.height = \"auto\";\r\n        }\r\n        if (ON) {\r\n            let hite = document.getElementById(this.myID).scrollHeight\r\n            TweenLite.to(element, seconds + this.timeAdjustment + this.offsetTiming, { ease: easing, height: hite, onComplete: complete })\r\n        } else {\r\n            TweenLite.to(element, seconds + this.timeAdjustment - this.offsetTiming, { ease: easing, height: 0 })\r\n\r\n        }\r\n        this.isOpen = ON\r\n        this.callbackFn(this.isOpen, this.props.ID)\r\n    }\r\n\r\n    render() {\r\n        let styles = { \"overflow\": \"hidden\" }\r\n        return (\r\n            <div id={this.myID} style={styles} >\r\n                <div id={`${this.myID}_inner_lining`}>\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accordion\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////\r\n\r\n    /// ORIGINAL toggle\r\n    // _toggle = (ON) => {\r\n    //     const oneZero = ON ? 1 : 0\r\n    //     const seconds = .4529\r\n    //     const element = document.getElementById(this.myID)\r\n    //     const getHeight = () => element.scrollHeight\r\n    //     const height = getHeight() * oneZero + \"px\"\r\n    //     TweenLite.to(element, seconds, { ease: Power3.easeOut, maxHeight: height }) \r\n    //     this.isOpen = ON\r\n    //     this.callbackFn(this.isOpen, this.props.ID)\r\n    // }\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n// // import Quiz from './components/Quiz'\r\n// import Accordion from './components/Accordion'\r\n\r\n// class App extends Component {\r\n//     constructor(props) {\r\n//         super(props)\r\n//         this.state = { controler: { identifier: \"\", group: \"\" } }\r\n//     }\r\n\r\n//     groupFn = (o) => {\r\n//         this.setState({ controler: { identifier: o.myID, group: o.groupID } })\r\n//     }\r\n\r\n//     callbackFn = (bool) => {\r\n//         // Do some side effect\r\n//         console.log(\"callbackFn(\" + bool + \")\")\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <div className=\"App\">\r\n//                 <header className=\"App-header\">\r\n//                     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//                     <h1 className=\"App-title\">Accordion Render Prop</h1>\r\n//                 </header>\r\n//                 <button id=\"accordionClicker1\" >Take Quiz One</button>\r\n//                 <Accordion ID=\"me_1\" actionID=\"accordionClicker1\" groupID=\"AAA\"  groupFn={this.groupFn} controler={this.state.controler} callbackFn={this.callbackFn} >\r\n//                     <div>\r\n//                         <p>  stuff 1</p>\r\n//                         <p>callback function called</p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//                 <button id=\"accordionClicker_2\" >Take Another Quiz</button>\r\n//                 <Accordion ID=\"my_2\" actionID=\"accordionClicker_2\" groupID=\"AAA\" groupFn={this.groupFn} controler={this.state.controler} >\r\n//                     <div>\r\n//                         <p>  stuff 2</p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//                 <h2>another set of things:</h2>\r\n//                 <button id=\"{this.keyID}\" >Tell Us about it</button>\r\n//                 <Accordion ID=\"{this.keyID}\" actionID=\"{this.keyID}\"  callbackFn={this.callbackFn}>\r\n//                     <div>\r\n//                         <p>These are independent</p>\r\n//                         <p>callback function called</p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <button id=\"accordionClicker_3b\" >Tell Us about it</button>\r\n//                 <Accordion ID=\"me_3b\" actionID=\"accordionClicker_3b\" >\r\n//                     <div>\r\n//                         <p>Accordions do not need to be grouped. Only ID and actionID are required.</p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//                 <button id=\"accordionClicker_4b\" >Tell Us about it</button>\r\n//                 <Accordion ID=\"me_4b\" actionID=\"accordionClicker_4b\" >\r\n//                     <div>\r\n//                         <p>  hi 4</p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//                 <button id=\"accordionClicker_5b\" >Tell Us about it</button>\r\n//                 <Accordion ID=\"me_5b\" actionID=\"accordionClicker_5b\" >\r\n//                     <div>\r\n//                         <p>  hi5 </p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//                 <h2>another set of things:</h2>\r\n//                 <button id=\"accordionClicker_3\" >Tell Us about it</button>\r\n//                 <Accordion ID=\"me_3\" actionID=\"accordionClicker_3\" groupID=\"ABA\"  groupFn={this.groupFn} controler={this.state.controler} >\r\n//                     <div>\r\n//                         <p>  hi 3</p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//                 <button id=\"accordionClicker_4\" >Tell Us about it</button>\r\n//                 <Accordion ID=\"me_4\" actionID=\"accordionClicker_4\" groupID=\"ABA\"  groupFn={this.groupFn} controler={this.state.controler} >\r\n//                     <div>\r\n//                         <p>  hi 4</p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//                 <button id=\"accordionClicker_5\" >Tell Us about it</button>\r\n//                 <Accordion ID=\"me_5\" actionID=\"accordionClicker_5\" groupID=\"ABA\"  groupFn={this.groupFn} controler={this.state.controler} >\r\n//                     <div>\r\n//                         <p>  hi5 </p>\r\n//                     </div>\r\n//                 </Accordion>\r\n//                 <hr />\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAwCA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA5CA;AA8CA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAjDA;AAmDA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAjEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AATA;AAUA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AA+BA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA9EA;AACA;AAgsourceRoot":""}